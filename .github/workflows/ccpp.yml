name: C/C++ CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-gcc-serial:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: compile
      run: |
        git submodule update --init
        ./compile.sh --jobs 4 --gcc -s
        
  build-gcc-serial-benchmarking:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: compile
      run: |
        git submodule update --init
        ./compile.sh --jobs 4 --gcc --sb
        
  build-pgi-multicore:
    
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: compile
        run: |
          git submodule update --init
          ./compile.sh --docker-build
          docker run -i --rm -v $(pwd):/host_pwd -w /host_pwd artss_docker ./compile.sh -m --jobs 4

  build-pgi-multicore-benchmarking:
    
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: compile
        run: |
          git submodule update --init
          ./compile.sh --docker-build
          docker run -i --rm -v $(pwd):/host_pwd -w /host_pwd artss_docker ./compile.sh --mb --jobs 4
  
  build-pgi-serial:
    
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: compile
        run: |
          git submodule update --init
          ./compile.sh --docker-build
          docker run -i --rm -v $(pwd):/host_pwd -w /host_pwd artss_docker ./compile.sh --jobs 4 -s
        
  build-pgi-serial-benchmarking:
    
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: compile
        run: |
          git submodule update --init
          ./compile.sh --docker-build
          docker run -i --rm -v $(pwd):/host_pwd -w /host_pwd artss_docker ./compile.sh --jobs 4 --sb
          
  cmake-tests:
    
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: compile
        run: |
          git submodule update --init
          ./compile.sh --docker-build
          docker run -i --rm -v $(pwd):/host_pwd -w /host_pwd artss_docker sh -c "./compile.sh --jobs 4 -s -d -t && cd build && make test"
          
  test-xml:
    
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: compile
        run: |
          git submodule update --init
          ./compile.sh --docker-build
          docker run -i --rm -v $(pwd):/host_pwd -w /host_pwd artss_docker sh -c "cd tools && pwd && ./test_xml-builder.sh"
